# Generated by Django 3.0.7 on 2021-03-04 14:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16)),
                ('deadline_time', models.DateTimeField()),
                ('average_entry_score', models.IntegerField(default=0, null=True)),
                ('finished', models.BooleanField()),
                ('data_checked', models.BooleanField()),
                ('highest_score', models.IntegerField(default=0, null=True)),
                ('is_previous', models.BooleanField()),
                ('is_current', models.BooleanField()),
                ('is_next', models.BooleanField()),
                ('top_element_points', models.IntegerField(null=True)),
                ('transfers_made', models.IntegerField(null=True)),
                ('total_players', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16)),
                ('name_short', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='UserFpl',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fpl', models.IntegerField(null=True)),
                ('joined_time', models.DateTimeField(null=True)),
                ('started_event', models.IntegerField(null=True)),
                ('favourite_team', models.IntegerField(null=True)),
                ('player_first_name', models.CharField(max_length=16, null=True)),
                ('player_last_name', models.CharField(max_length=16, null=True)),
                ('player_region_name', models.CharField(max_length=32, null=True)),
                ('player_region_iso_code_short', models.CharField(max_length=6, null=True)),
                ('player_region_iso_code_long', models.CharField(max_length=6, null=True)),
                ('summary_overall_points', models.IntegerField(null=True)),
                ('summary_overall_rank', models.IntegerField(null=True)),
                ('summary_event_points', models.IntegerField(null=True)),
                ('summary_event_rank', models.IntegerField(null=True)),
                ('current_event', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=64, null=True)),
                ('last_deadline_bank', models.FloatField(null=True)),
                ('last_deadline_value', models.FloatField(null=True)),
                ('last_deadline_total_transfers', models.IntegerField(null=True)),
                ('past', jsonfield.fields.JSONField(null=True)),
                ('chips', jsonfield.fields.JSONField(null=True)),
                ('transfers', jsonfield.fields.JSONField(null=True)),
            ],
            options={
                'unique_together': {('user', 'fpl')},
            },
        ),
        migrations.CreateModel(
            name='UserFplSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, null=True)),
                ('total_points', models.IntegerField(default=0, null=True)),
                ('rank', models.IntegerField(null=True)),
                ('rank_sort', models.IntegerField(null=True)),
                ('overall_rank', models.IntegerField(null=True)),
                ('bank', models.FloatField(null=True)),
                ('money', models.FloatField(null=True)),
                ('value', models.FloatField(null=True)),
                ('event_transfers', models.IntegerField(null=True)),
                ('event_transfers_cost', models.IntegerField(null=True)),
                ('points_on_bench', models.IntegerField(null=True)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_event', to='fantasy_pl.Event')),
                ('userfpl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_history', to='fantasy_pl.UserFpl')),
            ],
            options={
                'unique_together': {('userfpl', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('pulse_id', models.SmallIntegerField(null=True)),
                ('name', models.CharField(max_length=32)),
                ('short_name', models.CharField(max_length=4)),
                ('position', models.SmallIntegerField()),
                ('played', models.SmallIntegerField()),
                ('win', models.SmallIntegerField()),
                ('draw', models.SmallIntegerField()),
                ('loss', models.SmallIntegerField()),
                ('gf', models.SmallIntegerField(null=True)),
                ('ga', models.SmallIntegerField(null=True)),
                ('gd', models.SmallIntegerField(null=True)),
                ('points', models.SmallIntegerField()),
                ('form', models.TextField(max_length=8, null=True)),
                ('strength', models.SmallIntegerField()),
                ('strength_overall_home', models.SmallIntegerField()),
                ('strength_overall_away', models.SmallIntegerField()),
                ('strength_attack_home', models.SmallIntegerField()),
                ('strength_attack_away', models.SmallIntegerField()),
                ('strength_defence_home', models.SmallIntegerField()),
                ('strength_defence_away', models.SmallIntegerField()),
            ],
            options={
                'unique_together': {('id', 'pulse_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=32)),
                ('second_name', models.CharField(max_length=32)),
                ('news', models.TextField(max_length=256)),
                ('news_added', models.DateTimeField(null=True)),
                ('minutes', models.IntegerField()),
                ('goals_scored', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('clean_sheets', models.IntegerField()),
                ('goals_conceded', models.IntegerField()),
                ('own_goals', models.IntegerField()),
                ('penalties_saved', models.IntegerField()),
                ('penalties_missed', models.IntegerField()),
                ('yellow_cards', models.IntegerField()),
                ('red_cards', models.IntegerField()),
                ('saves', models.IntegerField()),
                ('chance_of_playing_next_round', models.IntegerField(null=True)),
                ('chance_of_playing_this_round', models.IntegerField(null=True)),
                ('cost_change_event', models.IntegerField(null=True)),
                ('cost_change_event_fall', models.IntegerField(null=True)),
                ('cost_change_start', models.IntegerField(null=True)),
                ('cost_change_start_fall', models.IntegerField(null=True)),
                ('dreamteam_count', models.IntegerField(null=True)),
                ('ep_next', models.FloatField(null=True)),
                ('ep_this', models.FloatField(null=True)),
                ('event_points', models.IntegerField(null=True)),
                ('form', models.FloatField(null=True)),
                ('in_dreamteam', models.BooleanField(null=True)),
                ('now_cost', models.FloatField(null=True)),
                ('points_per_game', models.FloatField(null=True)),
                ('selected_by_percent', models.FloatField(null=True)),
                ('transfers_in', models.IntegerField(null=True)),
                ('transfers_in_event', models.IntegerField(null=True)),
                ('transfers_out', models.IntegerField(null=True)),
                ('transfers_out_event', models.IntegerField(null=True)),
                ('special', models.BooleanField(null=True)),
                ('total_points', models.IntegerField(null=True)),
                ('value_form', models.FloatField(null=True)),
                ('value_season', models.FloatField(null=True)),
                ('bonus', models.IntegerField(null=True)),
                ('bps', models.FloatField(null=True)),
                ('influence', models.FloatField(null=True)),
                ('creativity', models.FloatField(null=True)),
                ('threat', models.FloatField(null=True)),
                ('ict_index', models.FloatField(null=True)),
                ('influence_rank', models.IntegerField(null=True)),
                ('influence_rank_type', models.IntegerField(null=True)),
                ('creativity_rank', models.IntegerField(null=True)),
                ('creativity_rank_type', models.IntegerField(null=True)),
                ('threat_rank', models.IntegerField(null=True)),
                ('threat_rank_type', models.IntegerField(null=True)),
                ('ict_index_rank', models.IntegerField(null=True)),
                ('ict_index_rank_type', models.IntegerField(null=True)),
                ('corners_and_indirect_freekicks_order', models.IntegerField(null=True)),
                ('corners_and_indirect_freekicks_text', models.CharField(max_length=128, null=True)),
                ('direct_freekicks_order', models.IntegerField(null=True)),
                ('direct_freekicks_text', models.CharField(max_length=128, null=True)),
                ('penalties_order', models.IntegerField(null=True)),
                ('penalties_text', models.CharField(max_length=128, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fantasy_pl.Position')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fantasy_pl.Team')),
            ],
            options={
                'unique_together': {('id', 'first_name', 'second_name')},
            },
        ),
        migrations.CreateModel(
            name='Fixtures',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('finished', models.BooleanField()),
                ('kickoff_time', models.DateTimeField(null=True)),
                ('team_h_score', models.CharField(default='-', max_length=4)),
                ('team_a_score', models.CharField(default='-', max_length=4)),
                ('team_h_difficulty', models.IntegerField()),
                ('team_a_difficulty', models.IntegerField()),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='f_event', to='fantasy_pl.Event')),
                ('team_a', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='f_away_team', to='fantasy_pl.Team')),
                ('team_h', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='f_home_team', to='fantasy_pl.Team')),
            ],
            options={
                'unique_together': {('id', 'team_h', 'team_a')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='most_captained',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_captained', to='fantasy_pl.Player'),
        ),
        migrations.AddField(
            model_name='event',
            name='most_selected',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_selected', to='fantasy_pl.Player'),
        ),
        migrations.AddField(
            model_name='event',
            name='most_transferred_in',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_transferred_ind', to='fantasy_pl.Player'),
        ),
        migrations.AddField(
            model_name='event',
            name='most_vice_captained',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='most_vice_captained', to='fantasy_pl.Player'),
        ),
        migrations.AddField(
            model_name='event',
            name='top_element',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='top_element', to='fantasy_pl.Player'),
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gkp1_pos', models.IntegerField()),
                ('gkp2_pos', models.IntegerField()),
                ('def1_pos', models.IntegerField()),
                ('def2_pos', models.IntegerField()),
                ('def3_pos', models.IntegerField()),
                ('def4_pos', models.IntegerField()),
                ('def5_pos', models.IntegerField()),
                ('mid1_pos', models.IntegerField()),
                ('mid2_pos', models.IntegerField()),
                ('mid3_pos', models.IntegerField()),
                ('mid4_pos', models.IntegerField()),
                ('mid5_pos', models.IntegerField()),
                ('fwd1_pos', models.IntegerField()),
                ('fwd2_pos', models.IntegerField()),
                ('fwd3_pos', models.IntegerField()),
                ('overall_cost', models.FloatField(default=0)),
                ('ppg', models.FloatField(default=0)),
                ('influence', models.FloatField(default=0)),
                ('creativity', models.FloatField(default=0)),
                ('threat', models.FloatField(default=0)),
                ('total_points', models.SmallIntegerField(default=0)),
                ('dt_apps', models.FloatField(default=0)),
                ('novelty', models.FloatField(default=0)),
                ('def1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='def1', to='fantasy_pl.Player')),
                ('def2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='def2', to='fantasy_pl.Player')),
                ('def3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='def3', to='fantasy_pl.Player')),
                ('def4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='def4', to='fantasy_pl.Player')),
                ('def5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='def5', to='fantasy_pl.Player')),
                ('fwd1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fwd1', to='fantasy_pl.Player')),
                ('fwd2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fwd2', to='fantasy_pl.Player')),
                ('fwd3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fwd3', to='fantasy_pl.Player')),
                ('gkp1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gkp1', to='fantasy_pl.Player')),
                ('gkp2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gkp2', to='fantasy_pl.Player')),
                ('mid1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mid1', to='fantasy_pl.Player')),
                ('mid2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mid2', to='fantasy_pl.Player')),
                ('mid3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mid3', to='fantasy_pl.Player')),
                ('mid4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mid4', to='fantasy_pl.Player')),
                ('mid5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mid5', to='fantasy_pl.Player')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='UserFplPicks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pck1_pos', models.IntegerField()),
                ('pck1_mult', models.IntegerField()),
                ('pck1_cpt', models.BooleanField()),
                ('pck1_vcpt', models.BooleanField()),
                ('pck2_pos', models.IntegerField()),
                ('pck2_mult', models.IntegerField()),
                ('pck2_cpt', models.BooleanField()),
                ('pck2_vcpt', models.BooleanField()),
                ('pck3_pos', models.IntegerField()),
                ('pck3_mult', models.IntegerField()),
                ('pck3_cpt', models.BooleanField()),
                ('pck3_vcpt', models.BooleanField()),
                ('pck4_pos', models.IntegerField()),
                ('pck4_mult', models.IntegerField()),
                ('pck4_cpt', models.BooleanField()),
                ('pck4_vcpt', models.BooleanField()),
                ('pck5_pos', models.IntegerField()),
                ('pck5_mult', models.IntegerField()),
                ('pck5_cpt', models.BooleanField()),
                ('pck5_vcpt', models.BooleanField()),
                ('pck6_pos', models.IntegerField()),
                ('pck6_mult', models.IntegerField()),
                ('pck6_cpt', models.BooleanField()),
                ('pck6_vcpt', models.BooleanField()),
                ('pck7_pos', models.IntegerField()),
                ('pck7_mult', models.IntegerField()),
                ('pck7_cpt', models.BooleanField()),
                ('pck7_vcpt', models.BooleanField()),
                ('pck8_pos', models.IntegerField()),
                ('pck8_mult', models.IntegerField()),
                ('pck8_cpt', models.BooleanField()),
                ('pck8_vcpt', models.BooleanField()),
                ('pck9_pos', models.IntegerField()),
                ('pck9_mult', models.IntegerField()),
                ('pck9_cpt', models.BooleanField()),
                ('pck9_vcpt', models.BooleanField()),
                ('pck10_pos', models.IntegerField()),
                ('pck10_mult', models.IntegerField()),
                ('pck10_cpt', models.BooleanField()),
                ('pck10_vcpt', models.BooleanField()),
                ('pck11_pos', models.IntegerField()),
                ('pck11_mult', models.IntegerField()),
                ('pck11_cpt', models.BooleanField()),
                ('pck11_vcpt', models.BooleanField()),
                ('pck12_pos', models.IntegerField()),
                ('pck12_mult', models.IntegerField()),
                ('pck12_cpt', models.BooleanField()),
                ('pck12_vcpt', models.BooleanField()),
                ('pck13_pos', models.IntegerField()),
                ('pck13_mult', models.IntegerField()),
                ('pck13_cpt', models.BooleanField()),
                ('pck13_vcpt', models.BooleanField()),
                ('pck14_pos', models.IntegerField()),
                ('pck14_mult', models.IntegerField()),
                ('pck14_cpt', models.BooleanField()),
                ('pck14_vcpt', models.BooleanField()),
                ('pck15_pos', models.IntegerField()),
                ('pck15_mult', models.IntegerField()),
                ('pck15_cpt', models.BooleanField()),
                ('pck15_vcpt', models.BooleanField()),
                ('pck1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick1', to='fantasy_pl.Player')),
                ('pck10', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick10', to='fantasy_pl.Player')),
                ('pck11', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick11', to='fantasy_pl.Player')),
                ('pck12', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick12', to='fantasy_pl.Player')),
                ('pck13', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick13', to='fantasy_pl.Player')),
                ('pck14', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick14', to='fantasy_pl.Player')),
                ('pck15', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick15', to='fantasy_pl.Player')),
                ('pck2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick2', to='fantasy_pl.Player')),
                ('pck3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick3', to='fantasy_pl.Player')),
                ('pck4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick4', to='fantasy_pl.Player')),
                ('pck5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick5', to='fantasy_pl.Player')),
                ('pck6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick6', to='fantasy_pl.Player')),
                ('pck7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick7', to='fantasy_pl.Player')),
                ('pck8', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick8', to='fantasy_pl.Player')),
                ('pck9', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick9', to='fantasy_pl.Player')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fantasy_pl.UserFplSeason')),
            ],
            options={
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='PlayerHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(null=True)),
                ('kickoff_time', models.DateTimeField(null=True)),
                ('difficulty', models.SmallIntegerField(null=True)),
                ('team_h_score', models.SmallIntegerField(null=True)),
                ('team_a_score', models.SmallIntegerField(null=True)),
                ('is_home', models.BooleanField()),
                ('finished', models.BooleanField()),
                ('minutes', models.SmallIntegerField()),
                ('total_points', models.SmallIntegerField(null=True)),
                ('goals_scored', models.SmallIntegerField(null=True)),
                ('assists', models.SmallIntegerField(null=True)),
                ('clean_sheets', models.SmallIntegerField(null=True)),
                ('goals_conceded', models.SmallIntegerField(null=True)),
                ('own_goals', models.SmallIntegerField(null=True)),
                ('penalties_saved', models.SmallIntegerField(null=True)),
                ('penalties_missed', models.SmallIntegerField(null=True)),
                ('yellow_cards', models.SmallIntegerField(null=True)),
                ('red_cards', models.SmallIntegerField(null=True)),
                ('saves', models.SmallIntegerField(null=True)),
                ('bonus', models.SmallIntegerField(null=True)),
                ('bps', models.SmallIntegerField(null=True)),
                ('influence', models.FloatField(null=True)),
                ('creativity', models.FloatField(null=True)),
                ('threat', models.FloatField(null=True)),
                ('ict_index', models.FloatField(null=True)),
                ('value', models.FloatField(null=True)),
                ('selected', models.IntegerField(null=True)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ph_event', to='fantasy_pl.Event')),
                ('fixture', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fantasy_pl.Fixtures')),
                ('opponent_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opp_team', to='fantasy_pl.Team')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fantasy_pl.Player')),
                ('team_a', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_away_team', to='fantasy_pl.Team')),
                ('team_h', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_home_team', to='fantasy_pl.Team')),
            ],
            options={
                'unique_together': {('fixture', 'player')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together={('id', 'name')},
        ),
    ]
